from sklearn.multioutput import MultiOutputRegressor
from sklearn.ensemble import GradientBoostingRegressor
import numpy as np


def build_cam2_model():
    inputs = np.array([
        [33.48, 217.92], [53.65, 219.64], [75.11, 223.07], [106.44, 221.36], [142.06, 220.07], [179.40, 223.07], [237.77, 215.78], [288.84, 215.78], [343.35, 213.63], [401.29, 211.48], [438.20, 208.05],
        [31.76, 193.03], [49.36, 195.18], [70.39, 192.17], [100.43, 191.31], [122.32, 191.31], [154.50, 184.02], [191.42, 190.45], [244.64, 182.73], [293.99, 181.87], [339.91, 179.73], [391.85, 175.86], [436.05, 172.86],
        [46.35, 172.43], [73.39, 164.70], [86.70, 168.14], [114.59, 166.42], [143.78, 162.56], [179.83, 158.27], [202.15, 163.42], [254.94, 153.97], [295.28, 153.12], [339.06, 151.40], [384.12, 149.25], [426.18, 146.68],
        [60.52, 156.12], [87.55, 147.54], [104.29, 150.11], [130.90, 144.53], [158.80, 141.10], [189.70, 138.95], [227.04, 133.37], [262.23, 130.37], [301.72, 131.66], [329.48, 128.65], [379.40, 126.51], [415.45, 123.93],
        [81.55, 132.94], [101.72, 131.66], [120.17, 132.94], [145.49, 126.08], [172.53, 122.64], [201.29, 118.78], [236.48, 115.78], [267.38, 111.91], [303.00, 110.20], [338.62, 106.76], [374.68, 107.62], [406.01, 102.90],
        [94.00, 120.07], [111.59, 116.21], [132.62, 113.63], [156.65, 108.91], [184.55, 105.05], [211.16, 100.33], [243.78, 99.90], [271.24, 94.75], [305.15, 93.03], [335.62, 92.17], [368.67, 91.74], [400.43, 87.45],
        [108.15, 105.48], [124.46, 103.33], [144.64, 101.18], [168.24, 96.03], [193.13, 92.60], [219.31, 90.03], [248.50, 86.16], [275.54, 81.87], [306.01, 81.01], [333.91, 81.01], [368.24, 79.30], [394.85, 78.01],
        [117.17, 96.03], [134.33, 93.03], [154.94, 87.88], [178.11, 85.73], [205.58, 90.58], [226.18, 78.44], [254.08, 76.72], [278.54, 71.57], [306.01, 70.28], [334.33, 68.14], [363.95, 68.14], [388.41, 66.42],
        [127.90, 83.59], [145.49, 81.44], [164.81, 78.01], [186.70, 74.58], [209.87, 71.14], [233.05, 69.42], [258.37, 66.85], [284.55, 61.70], [309.44, 60.84], [333.05, 58.27], [360.52, 58.27], [387.12, 56.98],
        [138.63, 76.72], [154.08, 72.43], [176.39, 68.57], [195.71, 65.56], [218.03, 62.56], [239.06, 60.41], [262.66, 57.84], [286.27, 53.55], [310.73, 52.26], [333.48, 52.69], [358.37, 50.54], [381.55, 47.97],
        [148.07, 68.14], [164.38, 64.27], [183.26, 60.41], [203.86, 56.55], [222.75, 55.26], [244.64, 53.12], [269.10, 49.68], [287.12, 46.25], [310.73, 46.25], [332.62, 44.96], [355.79, 42.82], [378.54, 41.96],
        [155.79, 60.41], [171.67, 58.70], [190.99, 54.40], [209.01, 50.97], [229.61, 47.54], [247.21, 45.82], [270.82, 43.24], [291.42, 39.38], [311.16, 40.24], [331.76, 39.38], [353.65, 37.24], [375.11, 35.95],
        [163.95, 53.55], [178.97, 49.68], [196.57, 48.39], [215.02, 44.96], [236.05, 41.53], [252.36, 38.52], [272.53, 37.67], [291.85, 34.66], [311.59, 34.66], [331.76, 32.52], [353.65, 30.80], [372.10, 29.51],
        [172.10, 49.68], [186.70, 47.54], [204.29, 42.39], [221.46, 39.38], [240.34, 36.80], [259.66, 32.94], [275.97, 32.52], [293.56, 29.94], [314.59, 28.65], [332.42, 28.22], [352.36, 27.36], [369.96, 25.22],
        [178.11, 43.24], [223.60, 35.09], [242.92, 29.08], [276.82, 29.94], [297.00, 26.51], [314.59, 23.93], [331.76, 22.64], [351.07, 22.21], [368.67, 20.92],
        [314.59, 19.64], [332.19, 18.35], [352.36, 17.06], [366.95, 17.92],
        [220.17, 29.08], [233.91, 24.79], [283.26, 19.64], [296.57, 21.79], [316.74, 16.64], [332.19, 14.92], [350.21, 14.49], [364.38, 13.63],
        [254.08, 17.92], [268.67, 17.49], [316.31, 13.20], [330.90, 11.91]
    ])

    except_output = np.array([
                        [50.0, 100.0], [50.0, 150.0], [50.0, 200.0], [50.0, 250.0], [50.0, 300.0], [50.0, 350.0], [50.0, 400.0], [50.0, 450.0], [50.0, 500.0], [50.0, 550.0], [50.0, 600.0],
                        [100.0, 50.0], [100.0, 100.0], [100.0, 150.0], [100.0, 200.0], [100.0, 250.0], [100.0, 300.0], [100.0, 350.0], [100.0, 400.0], [100.0, 450.0], [100.0, 500.0], [100, 550.0], [100.0, 600.0],
                        [150.0, 50.0], [150.0, 100.0], [150.0, 150.0], [150.0, 200.0], [150.0, 250.0], [150.0, 300.0], [150.0, 350.0], [150.0, 400.0], [150.0, 450.0], [150.0, 500.0], [150.0, 550.0], [150.0, 600.0],
                        [200.0, 50.0], [200.0, 100.0], [200.0, 150.0], [200.0, 200.0], [200.0, 250.0], [200.0, 300.0], [200.0, 350.0], [200.0, 400.0], [200.0, 450.0], [200.0, 500.0], [200.0, 550.0], [200.0, 600.0],
                        [250.0, 50.0], [250.0, 100.0], [250.0, 150.0], [250.0, 200.0], [250.0, 250.0], [250.0, 300.0], [250.0, 350.0], [250.0, 400.0], [250.0, 450.0], [250.0, 500.0], [250.0, 550.0], [250.0, 600.0],
                        [300.0, 50.0], [300.0, 100.0], [300.0, 150.0], [300.0, 200.0], [300.0, 250.0], [300.0, 300.0], [300.0, 350.0], [300.0, 400.0], [300.0, 450.0], [300.0, 500.0], [300.0, 550.0], [300.0, 600.0],
                        [350.0, 50.0], [350.0, 100.0], [350.0, 150.0], [350.0, 200.0], [350.0, 250.0], [350.0, 300.0], [350.0, 350.0], [350.0, 400.0], [350.0, 450.0], [350.0, 500.0], [350.0, 550.0], [350.0, 600.0],
                        [400.0, 50.0], [400.0, 100.0], [400.0, 150.0], [400.0, 200.0], [400.0, 250.0], [400.0, 300.0], [400.0, 350.0], [400.0, 400.0], [400.0, 450.0], [400.0, 500.0], [400.0, 550.0], [400.0, 600.0],
                        [450.0, 50.0], [450.0, 100.0], [450.0, 150.0], [450.0, 200.0], [450.0, 250.0], [450.0, 300.0], [450.0, 350.0], [450.0, 400.0], [450.0, 450.0], [450.0, 500.0], [450.0, 550.0], [450.0, 600.0],
                        [500.0, 50.0], [500.0, 100.0], [500.0, 150.0], [500.0, 200.0], [500.0, 250.0], [500.0, 300.0], [500.0, 350.0], [500.0, 400.0], [500.0, 450.0], [500.0, 500.0], [500.0, 550.0], [500.0, 600.0],
                        [550.0, 50.0], [550.0, 100.0], [550.0, 150.0], [550.0, 200.0], [550.0, 250.0], [550.0, 300.0], [550.0, 350.0], [550.0, 400.0], [550.0, 450.0], [550.0, 500.0], [550.0, 550.0], [550.0, 600.0],
                        [600.0, 50.0], [600.0, 100.0], [600.0, 150.0], [600.0, 200.0], [600.0, 250.0], [600.0, 300.0], [600.0, 350.0], [600.0, 400.0], [600.0, 450.0], [600.0, 500.0], [600.0, 550.0], [600.0, 600.0],
                        [650.0, 50.0], [650.0, 100.0], [650.0, 150.0], [650.0, 200.0], [650.0, 250.0], [650.0, 300.0], [650.0, 350.0], [650.0, 400.0], [650.0, 450.0], [650.0, 500.0], [650.0, 550.0], [650.0, 600.0],
                        [700.0, 50.0], [700.0, 100.0], [700.0, 150.0], [700.0, 200.0], [700.0, 250.0], [700.0, 300.0], [700.0, 350.0], [700.0, 400.0], [700.0, 450.0], [700.0, 500.0], [700.0, 550.0], [700.0, 600.0],
                        [750.0, 50.0], [750.0, 200.0], [750.0, 250.0], [750.0, 350.0], [750.0, 400.0], [750.0, 450.0], [750.0, 500.0], [750.0, 550.0], [750.0, 600.0],
                        [800.0, 450.0], [800.0, 500.0], [800.0, 550.0], [800.0, 600.0],
                        [850.0, 150.0], [850.0, 200.0], [850.0, 350.0], [850.0, 400.0], [850.0, 450.0], [850.0, 500.0], [850.0, 550.0], [850.0, 600.0],
                        [900.0, 250.0], [900.0, 300.0], [900.0, 450.0], [900.0, 500.0]
    ])

    model = MultiOutputRegressor(GradientBoostingRegressor(random_state=0))
    model.fit(inputs, except_output)
    return model