from sklearn.multioutput import MultiOutputRegressor
from sklearn.ensemble import GradientBoostingRegressor
import numpy as np


def build_cam1_model():
    inputs = np.array(
        [
            [621.46, 138.52],
            [606.87, 118.79],
            [592.70, 96.89],
            [575.97, 78.44],
            [561.37, 61.27],
            [550.64, 49.68],
            [532.62, 33.80],
            [523.18, 24.36],
            [514.60, 15.78],
            [503.86, 5.90],
            [495.28, 0.327],
            [617.60, 167.28],
            [601.29, 135.09],
            [582.40, 113.63],
            [568.24, 93.89],
            [554.08, 75.00],
            [534.76, 54.83],
            [528.76, 45.82],
            [512.45, 30.80],
            [503.43, 20.50],
            [494.42, 11.91],
            [486.27, 4.62],
            [591.85, 168.14],
            [561.80, 132.09],
            [554.94, 111.06],
            [523.18, 67.71],
            [509.01, 50.97],
            [499.57, 38.10],
            [490.99, 27.79],
            [481.55, 16.64],
            [474.25, 9.34],
            [466.95, 0.76],
            [561.80, 168.14],
            [531.76, 129.51],
            [524.46, 109.34],
            [495.28, 63.85],
            [482.40, 46.68],
            [472.96, 34.66],
            [463.95, 23.50],
            [460.09, 14.06],
            [446.35, 4.62],
            [445.92, 0.76],
            [507.73, 163.85],
            [486.70, 162.13],
            [477.25, 136.38],
            [463.95, 61.70],
            [455.36, 43.67],
            [443.78, 30.80],
            [434.76, 20.50],
            [430.90, 11.48],
            [466.52, 164.27],
            [455.79, 131.66],
            [445.49, 105.05],
            [425.75, 59.55],
            [410.73, 161.27],
            [409.44, 131.23],
            [406.01, 100.33],
            [387.98, 28.65],
            [385.41, 20.07],
            [380.69, 7.62],
            [379.40, 4.62],
            [365.24, 164.27],
            [366.52, 131.66],
            [364.81, 100.76],
            [361.80, 78.09],
            [360.95, 56.98],
            [359.66, 43.24],
            [358.80, 29.08],
            [356.22, 19.21],
            [355.79, 9.34],
            [354.94, 2.04],
            [311.59, 165.13],
            [317.17, 128.22],
            [319.74, 102.90],
            [321.03, 78.44],
            [325.32, 57.84],
            [326.18, 43.24],
            [327.04, 30.37],
            [325.32, 18.78],
            [327.04, 8.48],
            [329.18, 2.90],
            [259.66, 163.42],
            [266.95, 130.37],
            [277.25, 99.04],
            [281.55, 78.44],
            [287.12, 57.41],
            [290.99, 44.10],
            [295.28, 30.80],
            [296.14, 20.5],
            [301.29, 11.49],
            [306.87, 3.76],
            [212.02, 163.85],
            [222.32, 132.09],
            [236.48, 103.33],
            [244.21, 80.58],
            [254.94, 60.84],
            [261.37, 46.68],
            [267.38, 31.66],
            [272.10, 24.79],
            [279.83, 11.06],
            [283.26, 5.48],
            [169.53, 165.13],
            [185.87, 134.23],
            [196.14, 104.62],
            [211.59, 84.02],
            [221.89, 62.56],
            [232.62, 48.82],
            [240.77, 33.80],
            [245.06, 23.07],
            [257.08, 8.48],
            [130.47, 165.56],
            [147.21, 135.95],
            [161.37, 109.34],
            [177.25, 86.59],
            [190.56, 65.13],
            [201.29, 51.83],
            [217.17, 33.80],
            [224.03, 31.66],
            [232.62, 10.20],
            [239.48, 0.76],
            [100.0, 165.14],
            [114.59, 138.52],
            [133.48, 111.06],
            [148.50, 88.74],
            [162.23, 70.28],
            [172.96, 56.12],
            [194.85, 31.66],
            [217.60, 3.33],
            [71.24, 165.56],
            [90.13, 140.24],
            [105.15, 116.64],
            [121.46, 92.60],
            [139.06, 73.72],
            [151.50, 59.12],
            [185.41, 42.82],
            [172.10, 32.94],
            [182.83, 23.93],
            [199.14, 6.33],
            [47.21, 167.28],
            [66.96, 142.82],
            [83.26, 117.49],
            [98.28, 95.18],
            [114.59, 78.44],
            [125.32, 63.85],
            [140.34, 49.25],
            [149.79, 38.09],
            [162.66, 26.51],
            [180.26, 9.34],
            [27.47, 169.0],
            [44.64, 144.53],
            [63.52, 120.07],
            [76.39, 99.47],
            [93.13, 81.87],
            [107.30, 66.85],
            [119.74, 51.83],
            [132.19, 42.39],
            [142.49, 29.08],
            [150.21, 22.64],
            [162.66, 12.77],
            [44.21, 123.93],
            [60.52, 102.47],
            [73.82, 86.16],
            [88.41, 72.0],
            [124.46, 33.37],
            [133.05, 27.79],
        ]
    )

    except_output = np.array(
        [
            [50.0, 100.0],
            [50.0, 150.0],
            [50.0, 200.0],
            [50.0, 250.0],
            [50.0, 300.0],
            [50.0, 350.0],
            [50.0, 400.0],
            [50.0, 450.0],
            [50.0, 500.0],
            [50.0, 550.0],
            [50.0, 600.0],
            [100.0, 50.0],
            [100.0, 100.0],
            [100.0, 150.0],
            [100.0, 200.0],
            [100.0, 250.0],
            [100.0, 300.0],
            [100.0, 350.0],
            [100.0, 400.0],
            [100.0, 450.0],
            [100.0, 500.0],
            [100.0, 550.0],
            [150.0, 50.0],
            [150.0, 100.0],
            [150.0, 150.0],
            [150.0, 250.0],
            [150.0, 300.0],
            [150.0, 350.0],
            [150.0, 400.0],
            [150.0, 450.0],
            [150.0, 500.0],
            [150.0, 550.0],
            [200.0, 50.0],
            [200.0, 100.0],
            [200.0, 150.0],
            [200.0, 250.0],
            [200.0, 300.0],
            [200.0, 350.0],
            [200.0, 400.0],
            [200.0, 450.0],
            [200.0, 500.0],
            [200.0, 550.0],
            [250.0, 50.0],
            [250.0, 100.0],
            [250.0, 150.0],
            [250.0, 250.0],
            [250.0, 300.0],
            [250, 350],
            [250, 400],
            [250, 450],
            [300.0, 50.0],
            [300.0, 100.0],
            [300.0, 150.0],
            [300.0, 250.0],
            [350.0, 50.0],
            [350.0, 100.0],
            [350.0, 150.0],
            [350.0, 350.0],
            [350.0, 400.0],
            [350.0, 450.0],
            [350.0, 500.0],
            [400.0, 50.0],
            [400.0, 100.0],
            [400.0, 150.0],
            [400.0, 200.0],
            [400.0, 250.0],
            [400.0, 300.0],
            [400.0, 350.0],
            [400.0, 400.0],
            [400.0, 450.0],
            [400.0, 500.0],
            [450.0, 50.0],
            [450.0, 100.0],
            [450.0, 150.0],
            [450.0, 200.0],
            [450.0, 250.0],
            [450.0, 300.0],
            [450.0, 350.0],
            [450.0, 400.0],
            [450.0, 450.0],
            [450.0, 500.0],
            [500.0, 50.0],
            [500.0, 100.0],
            [500.0, 150.0],
            [500.0, 200.0],
            [500.0, 250.0],
            [500.0, 300.0],
            [500.0, 350.0],
            [500.0, 400.0],
            [500.0, 450.0],
            [500.0, 500.0],
            [550.0, 50.0],
            [550.0, 100.0],
            [550.0, 150.0],
            [550.0, 200.0],
            [550.0, 250.0],
            [550.0, 300.0],
            [550.0, 350.0],
            [550.0, 400.0],
            [550.0, 450.0],
            [550.0, 500.0],
            [600.0, 50.0],
            [600.0, 100.0],
            [600.0, 150.0],
            [600.0, 200.0],
            [600.0, 250.0],
            [600.0, 300.0],
            [600.0, 350.0],
            [600.0, 400.0],
            [600.0, 500.0],
            [650.0, 50.0],
            [650.0, 100.0],
            [650.0, 150.0],
            [650.0, 200.0],
            [650.0, 250.0],
            [650.0, 300.0],
            [650.0, 350.0],
            [650.0, 400.0],
            [650.0, 500.0],
            [650.0, 550.0],
            [700.0, 50.0],
            [700.0, 100.0],
            [700.0, 150.0],
            [700.0, 200.0],
            [700.0, 250.0],
            [700.0, 300.0],
            [700.0, 400.0],
            [700.0, 550.0],
            [750.0, 50.0],
            [750.0, 100.0],
            [750.0, 150.0],
            [750.0, 200.0],
            [750.0, 250.0],
            [750.0, 300.0],
            [750.0, 350.0],
            [750.0, 400.0],
            [750.0, 450.0],
            [750.0, 550.0],
            [800.0, 50.0],
            [800.0, 100.0],
            [800.0, 150.0],
            [800.0, 200.0],
            [800.0, 250.0],
            [800.0, 300.0],
            [800.0, 350.0],
            [800.0, 400.0],
            [800.0, 450.0],
            [800.0, 550.0],
            [850.0, 50.0],
            [850.0, 100.0],
            [850.0, 150.0],
            [850.0, 200.0],
            [850.0, 250.0],
            [850.0, 300.0],
            [850.0, 350.0],
            [850.0, 400.0],
            [850.0, 450.0],
            [850.0, 500.0],
            [850.0, 550.0],
            [900.0, 150.0],
            [900.0, 200.0],
            [900.0, 250.0],
            [900.0, 300.0],
            [900.0, 450.0],
            [900.0, 500.0],
        ]
    )

    model = MultiOutputRegressor(GradientBoostingRegressor(random_state=0))
    model.fit(inputs, except_output)
    return model
